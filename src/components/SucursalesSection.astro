---
// Sección de Sucursales con mapa interactivo
import SucursalesMap from './SucursalesMap.astro';
import sucursalesData from '../data/sucursales.json';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="sucursales" class="py-16 lg:py-24 bg-white">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Título -->
    <div class="text-center mb-16">
      <h2 class="text-3xl lg:text-4xl xl:text-5xl font-bold text-[var(--color-dark)] mb-6 leading-tight">
        {t('locations.title')}
      </h2>
      <p class="text-lg lg:text-xl text-gray-600 max-w-4xl mx-auto leading-relaxed">
        {t('locations.description')}
      </p>
    </div>

    <div class="grid lg:grid-cols-2 gap-12 items-start">
      <!-- Lista de Sucursales -->
      <div class="space-y-4">
        <h3 class="text-2xl font-bold text-[var(--color-dark)] mb-6">
          {t('locations.select')}
        </h3>
        
        <div class="grid gap-3 max-h-[500px] overflow-y-auto pr-2">
          {sucursalesData.map((sucursal, index) => (
            <button
              class="sucursal-item w-full text-left p-4 rounded-xl border-2 border-gray-200 hover:border-[var(--color-primary)] hover:bg-orange-50 transition-all duration-300 group"
              data-index={index}
              onclick={`selectSucursalFromMap(${index})`}
            >
              <div class="flex items-center space-x-3">
                <!-- Icono de ubicación -->
                <div class="flex items-center justify-center group-hover:scale-110 transition-transform duration-300">
                  <img src="/icons/locationicon.svg" alt="Ubicación" class="w-6 h-6" / width="24" height="24" loading="lazy">
                </div>
                
                <!-- Información de la sucursal -->
                <div class="flex-1">
                  <h4 class="font-bold text-gray-900 text-lg group-hover:text-[var(--color-primary)] transition-colors duration-300">
                    {sucursal.name}
                  </h4>
                  <p class="text-gray-600 text-sm">
                    {sucursal.address}
                  </p>
                </div>
                
                <!-- Flecha indicadora -->
                <div class="w-6 h-6 text-gray-400 group-hover:text-[var(--color-primary)] group-hover:translate-x-1 transition-all duration-300">
                  <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
                  </svg>
                </div>
              </div>
            </button>
          ))}
        </div>
      </div>

      <!-- Mapa -->
      <div class="lg:sticky lg:top-8">
        <SucursalesMap />
        
        <!-- Información de sucursal seleccionada -->
        <div id="sucursal-info" class="mt-6 p-6 bg-gray-50 rounded-2xl">
          <div class="flex items-start space-x-4">
            <div class="w-12 h-12 bg-[var(--color-primary)] rounded-full flex items-center justify-center flex-shrink-0">
              <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-4m-5 0H3m2 0h3M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
              </svg>
            </div>
            
            <div class="flex-1">
              <h4 id="info-name" class="text-xl font-bold text-[var(--color-dark)] mb-2">
                Vista Hermosa
              </h4>
              <div class="space-y-2 text-gray-600">
                <div class="flex items-center space-x-2">
                  <img src="/icons/locationicon.svg" alt="Ubicación" class="w-4 h-4" / width="16" height="16" loading="lazy">
                  <span id="info-address">Vía Brasil, Vista Hermosa</span>
                </div>
                <div class="flex items-center space-x-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                  </svg>
                  <span id="info-phone">+507 123-4567</span>
                </div>
                <div class="flex items-center space-x-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  <span id="info-hours">Lun - Vie: 8:00 AM - 6:00 PM</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Estilos para la lista de sucursales */
  .sucursal-item.active {
    border-color: var(--color-primary);
    background-color: rgba(239, 123, 52, 0.1);
  }
  
  .sucursal-item.active .group-hover\:text-\[var\(--color-primary\)\] {
    color: var(--color-primary);
  }
  
  /* Scroll personalizado */
  .overflow-y-auto::-webkit-scrollbar {
    width: 4px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb {
    background: var(--color-primary);
    border-radius: 4px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #d66a2a;
  }
</style>

<script define:vars={{ sucursalesData }}>
  let activeSucursalIndex = 0;
  
  // Función para actualizar la información de la sucursal
  function updateSucursalInfo(sucursal) {
    const infoName = document.getElementById('info-name');
    const infoAddress = document.getElementById('info-address');
    const infoPhone = document.getElementById('info-phone');
    const infoHours = document.getElementById('info-hours');
    
    if (infoName) infoName.textContent = sucursal.name;
    if (infoAddress) infoAddress.textContent = sucursal.address;
    if (infoPhone) infoPhone.textContent = sucursal.phone;
    if (infoHours) infoHours.textContent = sucursal.hours;
  }
  
  // Función para actualizar el estado activo de los botones
  function updateActiveButton(index) {
    // Remover clase active de todos los botones
    document.querySelectorAll('.sucursal-item').forEach(btn => {
      btn.classList.remove('active');
    });
    
    // Agregar clase active al botón seleccionado
    const activeButton = document.querySelector(`[data-index="${index}"]`);
    if (activeButton) {
      activeButton.classList.add('active');
    }
    
    activeSucursalIndex = index;
  }
  
  // Escuchar evento de selección de sucursal desde el mapa
  window.addEventListener('sucursalSelected', (event) => {
    const { sucursal, index } = event.detail;
    updateSucursalInfo(sucursal);
    updateActiveButton(index);
  });
  
  // Función global para seleccionar sucursal desde la lista
  window.selectSucursalFromList = function(index) {
    const sucursal = sucursalesData[index];
    updateSucursalInfo(sucursal);
    updateActiveButton(index);
    
    // Notificar al mapa si existe la función
    if (typeof window.selectSucursalFromList !== 'undefined') {
      // El mapa se actualizará automáticamente
    }
  };
  
  // Inicializar con la primera sucursal
  document.addEventListener('DOMContentLoaded', () => {
    if (sucursalesData.length > 0) {
      updateSucursalInfo(sucursalesData[0]);
      updateActiveButton(0);
    }
  });
</script>
